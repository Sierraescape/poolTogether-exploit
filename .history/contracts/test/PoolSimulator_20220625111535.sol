pragma solidity 0.8.10;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

import "hardhat/console.sol";

contract PoolSimulator   {
    IERC20 underlyingAsset;
    IERC20 overlyingAsset;

    constructor(
        address _underlyingAsset,
        address _overlyingAsset
    )   {
        underlyingAsset = IERC20(_underlyingAsset);
        overlyingAsset = IERC20(_overlyingAsset);
    }

    function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external   {
        console.log('Amount: %d', amount);
        console.log('Caller balance: %d', underlyingAsset.balanceOf(msg.sender));
        underlyingAsset.transferFrom(msg.sender, address(this), amount);
        overlyingAsset.transfer(onBehalfOf, amount);
    }

    function withdraw(address asset, uint256 amount, address to) external returns (uint256)   {
        overlyingAsset.transferFrom(msg.sender, address(this), amount);
        underlyingAsset.transfer(msg.sender, amount);
        return amount;
    }
}